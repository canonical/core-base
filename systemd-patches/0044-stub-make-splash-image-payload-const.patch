From 55d1e51f0f90fd6db8f9df607ae4a1435a2e299b Mon Sep 17 00:00:00 2001
From: Lennart Poettering <lennart@poettering.net>
Date: Mon, 20 Sep 2021 17:26:48 +0200
Subject: [PATCH 44/73] stub: make splash image payload const

---
 src/boot/efi/splash.c | 24 ++++++++++++++++--------
 src/boot/efi/splash.h |  2 +-
 src/boot/efi/stub.c   |  2 +-
 3 files changed, 18 insertions(+), 10 deletions(-)

diff --git a/src/boot/efi/splash.c b/src/boot/efi/splash.c
index bbc151767..0071a9317 100644
--- a/src/boot/efi/splash.c
+++ b/src/boot/efi/splash.c
@@ -37,8 +37,13 @@ struct bmp_map {
         UINT8 reserved;
 } _packed_;
 
-static EFI_STATUS bmp_parse_header(UINT8 *bmp, UINTN size, struct bmp_dib **ret_dib,
-                            struct bmp_map **ret_map, UINT8 **pixmap) {
+static EFI_STATUS bmp_parse_header(
+                const UINT8 *bmp,
+                UINTN size,
+                struct bmp_dib **ret_dib,
+                struct bmp_map **ret_map,
+                const UINT8 **pixmap) {
+
         struct bmp_file *file;
         struct bmp_dib *dib;
         struct bmp_map *map;
@@ -154,10 +159,13 @@ static VOID pixel_blend(UINT32 *dst, const UINT32 source) {
         *dst = (rb | g);
 }
 
-static EFI_STATUS bmp_to_blt(EFI_GRAPHICS_OUTPUT_BLT_PIXEL *buf,
-                      struct bmp_dib *dib, struct bmp_map *map,
-                      UINT8 *pixmap) {
-        UINT8 *in;
+static EFI_STATUS bmp_to_blt(
+                EFI_GRAPHICS_OUTPUT_BLT_PIXEL *buf,
+                struct bmp_dib *dib,
+                struct bmp_map *map,
+                const UINT8 *pixmap) {
+
+        const UINT8 *in;
 
         assert(buf);
         assert(dib);
@@ -246,13 +254,13 @@ static EFI_STATUS bmp_to_blt(EFI_GRAPHICS_OUTPUT_BLT_PIXEL *buf,
         return EFI_SUCCESS;
 }
 
-EFI_STATUS graphics_splash(UINT8 *content, UINTN len, const EFI_GRAPHICS_OUTPUT_BLT_PIXEL *background) {
+EFI_STATUS graphics_splash(const UINT8 *content, UINTN len, const EFI_GRAPHICS_OUTPUT_BLT_PIXEL *background) {
         EFI_GRAPHICS_OUTPUT_BLT_PIXEL pixel = {};
         static const EFI_GUID GraphicsOutputProtocolGuid = EFI_GRAPHICS_OUTPUT_PROTOCOL_GUID;
         EFI_GRAPHICS_OUTPUT_PROTOCOL *GraphicsOutput = NULL;
         struct bmp_dib *dib;
         struct bmp_map *map;
-        UINT8 *pixmap;
+        const UINT8 *pixmap;
         UINT64 blt_size;
         _cleanup_freepool_ VOID *blt = NULL;
         UINTN x_pos = 0;
diff --git a/src/boot/efi/splash.h b/src/boot/efi/splash.h
index b9f74ffbf..37ccc6b6a 100644
--- a/src/boot/efi/splash.h
+++ b/src/boot/efi/splash.h
@@ -3,4 +3,4 @@
 
 #include <efi.h>
 
-EFI_STATUS graphics_splash(UINT8 *content, UINTN len, const EFI_GRAPHICS_OUTPUT_BLT_PIXEL *background);
+EFI_STATUS graphics_splash(const UINT8 *content, UINTN len, const EFI_GRAPHICS_OUTPUT_BLT_PIXEL *background);
diff --git a/src/boot/efi/stub.c b/src/boot/efi/stub.c
index d0b4972dc..9a71aff16 100644
--- a/src/boot/efi/stub.c
+++ b/src/boot/efi/stub.c
@@ -173,7 +173,7 @@ EFI_STATUS efi_main(EFI_HANDLE image, EFI_SYSTEM_TABLE *sys_table) {
                 return log_error_status_stall(err, L"Unable to locate embedded .linux section: %r", err);
 
         /* Show splash screen as early as possible */
-        graphics_splash((UINT8*) loaded_image->ImageBase + addrs[SECTION_SPLASH], szs[SECTION_SPLASH], NULL);
+        graphics_splash((const UINT8*) loaded_image->ImageBase + addrs[SECTION_SPLASH], szs[SECTION_SPLASH], NULL);
 
         if (szs[SECTION_CMDLINE] > 0) {
                 cmdline = (CHAR8*) loaded_image->ImageBase + addrs[SECTION_CMDLINE];
-- 
2.34.1

