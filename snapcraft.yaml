name: core22
# version: "22"
adopt-info: bootstrap
summary: Runtime environment based on Ubuntu 22.04
description: |
  The base snap based on the Ubuntu 22.04 release.
confinement: strict
type: base
build-base: core22
grade: stable
assumes: [snapd2.55.5]

parts:
  probert-deb:
    plugin: nil
    source: https://github.com/canonical/probert.git
    source-type: git
    # following branch server/jammy
    source-commit: 639255e5ddceb00cb21c2436e7ce1f7430aa710f
    override-pull: |
      craftctl default
      # install build dependencies
      export DEBIAN_FRONTEND=noninteractive
      export DEBCONF_NONINTERACTIVE_SEEN=true
      apt-get build-dep -y ./
    override-build: |
      # unset the LD_FLAGS and LD_LIBRARY_PATH vars that snapcraft sets for us
      # as those will point to the $CRAFT_STAGE which on re-builds will
      # contain things like libc and friends that confuse the debian package
      # build system
      # TODO: should we unset $PATH to not include $CRAFT_STAGE too?
      unset LD_FLAGS
      unset LD_LIBRARY_PATH
      # run the real build (but just build the binary package, and don't
      # bother compressing it too much)
      dpkg-buildpackage -b -uc -us -Zgzip -zfast
      cp ../probert-{network,common}*.deb $CRAFT_PART_INSTALL
    stage:
      - -probert*.deb
  consoleconf-deb:
    after:
      - probert-deb
    plugin: nil
    source: https://github.com/canonical/subiquity.git
    source-type: git
    # following branch server/jammy
    source-commit: abc053508fa27656f1016e32585077ef567ad591
    override-pull: |
      craftctl default
      # install build dependencies
      export DEBIAN_FRONTEND=noninteractive
      export DEBCONF_NONINTERACTIVE_SEEN=true
      apt-get build-dep -y ./
    override-build: |
      # unset the LD_FLAGS and LD_LIBRARY_PATH vars that snapcraft sets for us
      # as those will point to the $CRAFT_STAGE which on re-builds will
      # contain things like libc and friends that confuse the debian package
      # build system
      # TODO: should we unset $PATH to not include $CRAFT_STAGE too?
      unset LD_FLAGS
      unset LD_LIBRARY_PATH
      # run the real build (but just build the binary package, and don't
      # bother compressing it too much)
      dpkg-buildpackage -b -uc -us -Zgzip -zfast
      cp ../console-conf_*.deb ../subiquitycore_*.deb $CRAFT_PART_INSTALL
    stage:
      - -console-conf_*.deb
      - -subiquitycore_*.deb
  bootstrap:
    after:
      - consoleconf-deb
    plugin: make
    source: .
    build-packages:
      - shellcheck
      - wget
      - distro-info
    override-pull: |
      craftctl set version="$(/bin/date +%Y%m%d)"
      craftctl default
    override-prime: |
      craftctl default
      # ensure build-in tests are run
      cd ${CRAFT_PART_SRC} && make test TESTDIR=${CRAFT_PRIME}
