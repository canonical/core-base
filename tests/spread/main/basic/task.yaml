summary: Ensure that things worked

prepare: |
  # for various utilities
  . "$TESTSLIB/nested.sh"

  # Start the nested UC VM
  start_nested_core_vm_unit

  # At this point we are able to SSH to the nested VM, so things probably worked
  # but we should wait for snapd to finish seeding anyways, but first we need to
  # wait for the snap command to exist
  nested_wait_for_snap_command

execute: |
  # for various utilities
  . "$TESTSLIB/nested.sh"

  # Now formally wait for seeding
  execute_remote sudo snap wait system seed.loaded

  # We should be in run mode
  execute_remote cat /proc/cmdline | MATCH snapd_recovery_mode=run

  # We should have a modeenv
  execute_remote test -f /var/lib/snapd/modeenv

  # Verify that the partitions we expect, are present
  execute_remote lsblk -f -m -l | awk '{ print $4 }' | grep ubuntu-seed
  execute_remote lsblk -f -m -l | awk '{ print $4 }' | grep ubuntu-boot
  execute_remote lsblk -f -m -l | awk '{ print $4 }' | grep ubuntu-save
  execute_remote lsblk -f -m -l | awk '{ print $4 }' | grep ubuntu-data
  
  # Verify snapd is running
  execute_remote systemctl -q is-active snapd
  execute_remote snap change 1

  # Verify basic system services are running
  execute_remote systemctl -q is-active systemd-networkd.service
  execute_remote systemctl -q is-active systemd-udevd.service
  execute_remote systemctl -q is-active systemd-journald.service
  execute_remote systemctl -q is-active systemd-resolved.service
  execute_remote systemctl -q is-active systemd-timesyncd.service

  # Verify that ubuntu-seed and ubuntu-save has been mounted
  # ubuntu-seed should be mounted readonly
  # ubuntu-save should be mounted readwrite
  execute_remote mount | awk '{if ($3 == "/var/lib/snapd/seed" && index($6, "ro")) { exit 0}} ENDFILE{exit -1}'
  execute_remote mount | awk '{if ($3 == "/var/lib/snapd/save" && index($6, "rw")) { exit 0}} ENDFILE{exit -1}'
  
  # Verify that ubuntu-save has been mounted earlier than local-fs.target and not by snapd
  # at a later stage. This is related to PR https://github.com/snapcore/snapd/pull/11850
  UCSAVE_MOUNT_TIME=$(execute_remote systemctl show -p ActiveEnterTimestampMonotonic --value var-lib-snapd-save.mount)
  LOCALFS_MOUNT_TIME=$(execute_remote systemctl show -p ActiveEnterTimestampMonotonic --value local-fs.target)
  if [ "$UCSAVE_MOUNT_TIME" -ge "$LOCALFS_MOUNT_TIME" ]; then
    echo "ubuntu-save was not mounted before local-fs.target"
    exit 1
  fi
